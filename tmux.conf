# Use vim keybindings in copy mode
setw -g mode-keys vi
# Ctrl-a as prefix instead of Ctrl-b
set -g prefix C-a
unbind C-b
# have `C-a C-a` send C-a keypress to the current window
bind C-a send-prefix

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'
# Clears the screen the scroll back history
bind C-k send-keys -R \; clear-history

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# switch to a session that start with the given name
bind S command-prompt -p session: "run-shell 'tmux-switch-session \"%%\"'"

# # create a new session and cd to a Coral repo
bind C command-prompt -p coral: "new-session -s %1 ; send-keys 'coral cd %1' C-m"
bind v command-prompt -p dive: "new-window -a -n '%1' 'coral dive %1'"
bind m command-prompt -p man: "split-window -h 'man %1'"
bind g new-window -a -n log 'tail -f log/development.log'

# # source this file after changes
bind R source-file ~/.tmux.conf; display-message "Config reloaded..."

# # enable for iTerm (Terminal.app doesn't have mouse support)
set -g mouse-resize-pane on

# # Faster escape sequences (default is 500ms).
# # This helps when exiting insert mode in Vim: http://superuser.com/a/252717/65504
set -s escape-time 50

# # start numbering windows from 1 instead of zero
set -g base-index 1

# # syntax highlighting in Vim
set -g default-terminal "screen-256color"

# # enable clipboard http://goo.gl/DN82E
# # enable RubyMotion http://goo.gl/WDlCy
set -g default-command "reattach-to-user-namespace bash --login"

# # disable programs changing window names via terminal escape sequence
set-window-option -g allow-rename off

# # status bar
set -g status-utf8 on
# # current session
set -g status-left ' #S '
set -g status-left-length 15
# # window list
set -g window-status-format "#I #W#F "
set -g window-status-current-format "#I #W#F "
set -g window-status-separator ""
# status right options
set -g status-right '%Y-%m-%d %H:%M #(/usr/bin/battery -o tmux)]'

# # disable possibly set visual editor
set-environment -gu GEM_EDITOR

#### COLOUR (Solarized light)

# default statusbar colors
set-option -g status-bg white #base2
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg brightyellow #base00
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg white #base2
set-option -g pane-active-border-fg brightcyan #base1

# message text
set-option -g message-bg white #base2
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# vim:ft=conf:
